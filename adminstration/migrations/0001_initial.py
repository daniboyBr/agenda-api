# Generated by Django 3.1.3 on 2020-11-25 14:21

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Graduacao',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('Nome', models.CharField(max_length=45)),
                ('InseridoPor', models.CharField(max_length=45, null=True)),
                ('DataInsercao', models.DateTimeField(auto_now_add=True)),
                ('AtualizadoPor', models.CharField(max_length=45, null=True)),
                ('DataDeAtualizacao', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Secao',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('Nome', models.CharField(max_length=45)),
                ('InseridoPor', models.CharField(max_length=45, null=True)),
                ('DataInsercao', models.DateTimeField(auto_now_add=True)),
                ('AtualizadoPor', models.CharField(max_length=45, null=True)),
                ('DataDeAtualizacao', models.DateTimeField(auto_now=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Militar',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('Nome', models.CharField(max_length=45)),
                ('NomeGuerra', models.CharField(max_length=45)),
                ('Email', models.EmailField(max_length=100, unique=True)),
                ('DataDeNascimento', models.DateField(null=True)),
                ('Telefone', models.CharField(max_length=45, null=True)),
                ('RITEx', models.CharField(max_length=45, null=True)),
                ('FlgCiente', models.BooleanField(default=True)),
                ('Imagem', models.ImageField(blank=True, null=True, upload_to='militares/')),
                ('FlgTelegram', models.BooleanField(default=True)),
                ('FlgWhatsApp', models.BooleanField(default=True)),
                ('InseridoPor', models.CharField(max_length=45, null=True)),
                ('DataInsercao', models.DateTimeField(auto_now_add=True)),
                ('AtualizadoPor', models.CharField(max_length=45, null=True)),
                ('DataDeAtualizacao', models.DateTimeField(auto_now=True)),
                ('FlgAtivo', models.BooleanField(default=True)),
                ('graduacao', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='adminstration.graduacao')),
                ('secao', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='adminstration.secao')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
